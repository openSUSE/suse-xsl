#
# GeekoDoc5 Schema
#
# See http://docbook.org/docs/howto
#
# This schema is a customization of DocBook for SUSE documents
#
# Author: Thomas Schraitle, 2015
#
default namespace db = "http://docbook.org/ns/docbook"

namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace ctrl = "http://nwalsh.com/xmlns/schema-control/"
namespace html = "http://www.w3.org/1999/xhtml"
namespace mml = "http://www.w3.org/1998/Math/MathML"
namespace svg = "http://www.w3.org/2000/svg"
namespace s = "http://purl.oclc.org/dsdl/schematron"
namespace xlink = "http://www.w3.org/1999/xlink"
namespace local = ""

# Namespace for DocBook Transclusions
# See http://docbook.org/docs/transclusion/
namespace locattr="http://www.w3.org/2001/XInclude/local-attributes"
namespace trans="http://docbook.org/ns/transclusion"

datatypes xsd = "http://www.w3.org/2001/XMLSchema-datatypes"

suse.schema.version = "5.1-subset GeekoDoc-0.9.2"

#
include "transclusion.rnc"

# XInclude 1.1
div
{
  db.xi.href.attribute =
    ## reference to your included source (absence of this attribute
    ## means the same than href=""
    attribute href {
      ""
      |
      xsd:anyURI {  pattern = "[^#]+" }
    }
  db.xi.xpointer.attribute =
    ## XPointer expression
    attribute xpointer { text }
  db.xi.parse.attribute =
    ## Indicates how to parse the included resource (as XML or as text)
    [ a:defaultValue = "xml" ] attribute parse { "xml" | "text" }
  db.xi.encoding.attribute =
    ## Specifies encoding of the xincluded source for non-XML processing
    attribute encoding { text }
  db.xi.accept.attribute =
    ## Aid in content negotiation. Place the value in the HTTP request as an Accept header
    attribute accept { text }
  db.xi.accept-language.attribute =
    ## Aid in content negotiation. Place the value in the HTTP request as an Accept-Language header
    attribute accept-language { text }
  db.xi.set-xml-id.attribute =
    ## set or remove attribute xml:id from root element in xincluded file
    attribute set-xml-id { text }
  db.xi.fragid.attribute =
    ## Generalization of the xpointer attribute. Include only partial structure from source
    attribute fragid { text }
}

#======== Our own patterns
div
{
db.step.blocks =
   db.para.blocks
   | db.remark
   | db.indexterm # TODO: Remove that (currently we have too much of that)
   | db.example
   | db.figure
   | db.informalexample
   | db.informalfigure
   | db.admonition.blocks
   | db.graphic.blocks
   | db.verbatim.blocks
   | db.extension.blocks
   | db.itemizedlist
   | db.orderedlist
   | db.simplelist
   | db.variablelist
   | db.calloutlist
   | db.calloutlist
   | db.annotation
   | db.xi.include
   # no db.publishing.blocks, db.technical.blocks
   #| db.formal.blocks - db.table - db.equation
   #| db.informal.blocks - db.informaltable - db.informalequation
   #| db.procedure
   #| db.segmentedlist
   #| db.glosslist
   #| db.bibliolist
   #| db.qandaset
   # ----
}

# Use a catalog entry to resolve this:
# include "http://docbook.org/xml/5.1CR3/rng/docbook.rnc"
include "docbookxi.rnc"
{
  # Redefine element pattern as notAllowed here as they are not needed:
  #
  # List created with:
  # egrep "\s+db\.[a-z]+\s*=\s*" /usr/share/xml/docbook/schema/rng/5.1/docbook.rnc  | sort > db5-elements.txt
  # cat db5-elements.txt | sed 's,=,= notAllowed,g' > db5-elements-notallowed.txt
  #
  div
  {
  db.abbrev = notAllowed
  # db.abstract = notAllowed
  db.accel = notAllowed
  db.acknowledgements = notAllowed
  db.acronym = notAllowed
  db.address = notAllowed
  db.affiliation = notAllowed
  # db.alt = notAllowed
  db.anchor = notAllowed
  # db.annotation = notAllowed
  # db.answer = notAllowed
  # db.appendix = notAllowed
  db.application = notAllowed
  db.arc = notAllowed
  db.area = notAllowed
  db.areaset = notAllowed
  db.areaspec = notAllowed
  db.arg = notAllowed
  # db.article = notAllowed
  db.artpagenums = notAllowed
  db.attribution = notAllowed
  db.audiodata = notAllowed
  db.audioobject = notAllowed
  # db.author = notAllowed
  # db.authorgroup = notAllowed
  db.authorinitials = notAllowed
  db.bibliocoverage = notAllowed
  db.bibliodiv = notAllowed
  db.biblioentry = notAllowed
  db.bibliography = notAllowed
  db.biblioid = notAllowed
  db.bibliolist = notAllowed
  db.bibliomisc = notAllowed
  db.bibliomixed = notAllowed
  db.bibliomset = notAllowed
  db.biblioref = notAllowed
  db.bibliorelation = notAllowed
  db.biblioset = notAllowed
  db.bibliosource = notAllowed
  db.blockquote = notAllowed
  # db.book = notAllowed
  db.bridgehead = notAllowed
  # db.callout = notAllowed
  # db.calloutlist = notAllowed
  db.caption = notAllowed
  # db.caution = notAllowed
  # db.chapter = notAllowed
  db.citation = notAllowed
  db.citebiblioid = notAllowed
  db.citerefentry = notAllowed
  # db.citetitle = notAllowed
  db.city = notAllowed
  db.classname = notAllowed
  db.classsynopsis = notAllowed
  db.classsynopsisinfo = notAllowed
  db.cmdsynopsis = notAllowed
  # db.co = notAllowed
  # db.code = notAllowed
  db.collab = notAllowed
  db.colophon = notAllowed
  # db.colspec = notAllowed
  # db.command = notAllowed
  db.computeroutput = notAllowed
  db.confdates = notAllowed
  db.confgroup = notAllowed
  db.confnum = notAllowed
  db.confsponsor = notAllowed
  db.conftitle = notAllowed
  # db.constant = notAllowed
  db.constraint = notAllowed
  db.constraintdef = notAllowed
  db.constructorsynopsis = notAllowed
  db.contractnum = notAllowed
  db.contractsponsor = notAllowed
  # db.contrib = notAllowed
  # db.copyright = notAllowed
  db.coref = notAllowed
  db.country = notAllowed
  # db.cover = notAllowed
  db.database = notAllowed
  # db.date = notAllowed
  db.dedication = notAllowed
  db.destructorsynopsis = notAllowed
  # db.edition = notAllowed
  # db.editor = notAllowed
  # db.email = notAllowed
  # db.emphasis = notAllowed
  # db.entry = notAllowed
  db.entrytbl = notAllowed
  # db.envar = notAllowed
  db.epigraph = notAllowed
  db.equation = notAllowed
  db.errorcode = notAllowed
  db.errorname = notAllowed
  db.errortext = notAllowed
  db.errortype = notAllowed
  # db.example = notAllowed
  db.exceptionname = notAllowed
  db.extendedlink = notAllowed
  db.fax = notAllowed
  db.fieldsynopsis = notAllowed
  # db.figure = notAllowed
  # db.filename = notAllowed
  # db.firstname = notAllowed
  db.firstterm = notAllowed
  # db.footnote = notAllowed # For Meike ;)
  db.footnoteref = notAllowed
  db.foreignphrase = notAllowed
  # db.formalpara = notAllowed
  db.funcdef = notAllowed
  db.funcparams = notAllowed
  db.funcprototype = notAllowed
  db.funcsynopsis = notAllowed
  db.funcsynopsisinfo = notAllowed
  # db.function = notAllowed
  # db.glossary = notAllowed
  # db.glossdef = notAllowed
  # db.glossdiv = notAllowed
  # db.glossentry = notAllowed
  # db.glosslist = notAllowed
  # db.glosssee = notAllowed
  # db.glossseealso = notAllowed
  # db.glossterm = notAllowed
  db.group = notAllowed
  db.guibutton = notAllowed
  db.guiicon = notAllowed
  db.guilabel = notAllowed
  # db.guimenu = notAllowed
  db.guimenuitem = notAllowed
  db.guisubmenu = notAllowed
  db.hardware = notAllowed
  db.holder = notAllowed
  db.honorific = notAllowed
  # db.imagedata = notAllowed
  # db.imageobject = notAllowed
  db.imageobjectco = notAllowed
  # db.important = notAllowed
  # db.index = notAllowed
  # db.indexdiv = notAllowed
  # db.indexentry = notAllowed
  # db.indexterm = notAllowed
  # db.info = notAllowed
  db.informalequation = notAllowed
  # db.informalexample = notAllowed
  # db.informalfigure = notAllowed
  db.initializer = notAllowed
  db.inlineequation = notAllowed
  # db.inlinemediaobject = notAllowed
  db.interfacename = notAllowed
  db.issuenum = notAllowed
  # db.itemizedlist = notAllowed
  db.itermset = notAllowed
  db.jobtitle = notAllowed
  # db.keycap = notAllowed
  db.keycode = notAllowed
  # db.keycombo = notAllowed
  db.keysym = notAllowed
  # db.keyword = notAllowed
  # db.keywordset = notAllowed
  db.label = notAllowed
  # db.legalnotice = notAllowed
  db.lhs = notAllowed
  db.lineage = notAllowed
  db.lineannotation = notAllowed
  # db.link = notAllowed
  # db.listitem = notAllowed
  # db.literal = notAllowed
  db.literallayout = notAllowed
  db.locator = notAllowed
  db.manvolnum = notAllowed
  db.markup = notAllowed
  db.mathphrase = notAllowed
  # db.mediaobject = notAllowed
  # db.member = notAllowed
  # db.menuchoice = notAllowed
  db.methodname = notAllowed
  db.methodparam = notAllowed
  db.methodsynopsis = notAllowed
  db.modifier = notAllowed
  db.mousebutton = notAllowed
  db.msg = notAllowed
  db.msgaud = notAllowed
  db.msgentry = notAllowed
  # db.msgexplan = notAllowed
  db.msginfo = notAllowed
  db.msglevel = notAllowed
  db.msgmain = notAllowed
  db.msgorig = notAllowed
  db.msgrel = notAllowed
  db.msgset = notAllowed
  db.msgsub = notAllowed
  # db.msgtext = notAllowed
  db.nonterminal = notAllowed
  # db.note = notAllowed
  db.olink = notAllowed
  db.ooclass = notAllowed
  db.ooexception = notAllowed
  db.oointerface = notAllowed
  # db.option = notAllowed
  db.optional = notAllowed
  # db.orderedlist = notAllowed
  db.org = notAllowed
  db.orgdiv = notAllowed
  db.orgname = notAllowed
  db.otheraddr = notAllowed
  # db.othercredit = notAllowed
  db.othername = notAllowed
  # db.package = notAllowed
  db.pagenums = notAllowed
  # db.para = notAllowed
  db.paramdef = notAllowed
  # db.parameter = notAllowed
  # db.part = notAllowed
  # db.partintro = notAllowed
  # db.person = notAllowed
  # db.personblurb = notAllowed
  # db.personname = notAllowed
  db.phone = notAllowed
  # db.phrase = notAllowed
  db.pob = notAllowed
  db.postcode = notAllowed
  # db.preface = notAllowed
  # db.primary = notAllowed
  db.primaryie = notAllowed
  db.printhistory = notAllowed
  # db.procedure = notAllowed
  db.production = notAllowed
  db.productionrecap = notAllowed
  db.productionset = notAllowed
  # db.productname = notAllowed
  # db.productnumber = notAllowed
  # db.programlisting = notAllowed
  db.programlistingco = notAllowed
  # db.prompt = notAllowed
  # db.property = notAllowed
  # db.pubdate = notAllowed
  db.publisher = notAllowed
  db.publishername = notAllowed
  # db.qandadiv = notAllowed
  # db.qandaentry = notAllowed
  # db.qandaset = notAllowed
  # db.question = notAllowed
  # db.quote = notAllowed
  db.refclass = notAllowed
  db.refdescriptor = notAllowed
  # db.refentry = notAllowed
  # db.refentrytitle = notAllowed
  # db.reference = notAllowed
  # db.refmeta = notAllowed
  # db.refmiscinfo = notAllowed
  # db.refname = notAllowed
  # db.refnamediv = notAllowed
  # db.refpurpose = notAllowed
  # db.refsection = notAllowed
  # db.refsynopsisdiv = notAllowed
  # db.releaseinfo = notAllowed
  # db.remark = notAllowed
  # db.replaceable = notAllowed
  db.returnvalue = notAllowed
  # db.revdescription = notAllowed
  # db.revhistory = notAllowed
  # db.revision = notAllowed
  # db.revnumber = notAllowed
  # db.revremark = notAllowed
  db.rhs = notAllowed
  # db.row = notAllowed
  db.sbr = notAllowed
  # db.screen = notAllowed
  db.screenco = notAllowed
  db.screenshot = notAllowed
  # db.secondary = notAllowed
  db.secondaryie = notAllowed
  db.section = notAllowed
  # db.see = notAllowed
  db.seealso = notAllowed
  db.seealsoie = notAllowed
  db.seeie = notAllowed
  db.seg = notAllowed
  db.seglistitem = notAllowed
  db.segmentedlist = notAllowed
  db.segtitle = notAllowed
  db.seriesvolnums = notAllowed
  # db.set = notAllowed
  db.setindex = notAllowed
  db.shortaffil = notAllowed
  db.shortcut = notAllowed
  db.sidebar = notAllowed
  db.simpara = notAllowed
  # db.simplelist = notAllowed
  # db.simplemsgentry = notAllowed
  db.simplesect = notAllowed
  # db.spanspec = notAllowed
  db.state = notAllowed
  # db.step = notAllowed
  # db.stepalternatives = notAllowed
  db.street = notAllowed
  db.subject = notAllowed
  db.subjectset = notAllowed
  db.subjectterm = notAllowed
  # db.subscript = notAllowed
  # db.substeps = notAllowed
  # db.subtitle = notAllowed
  # db.superscript = notAllowed
  # db.surname = notAllowed
  db.symbol = notAllowed
  db.synopfragment = notAllowed
  db.synopfragmentref = notAllowed
  db.synopsis = notAllowed
  # db.systemitem = notAllowed
  # db.tag = notAllowed
  # db.task = notAllowed
  # db.taskprerequisites = notAllowed
  # db.taskrelated = notAllowed
  # db.tasksummary = notAllowed
  # db.term = notAllowed
  db.termdef = notAllowed
  # db.tertiary = notAllowed
  db.tertiaryie = notAllowed
  db.textdata = notAllowed
  # db.textobject = notAllowed
  # db.tbody = notAllowed
  # db.tfoot = notAllowed
  # db.tgroup = notAllowed
  # db.tip = notAllowed
  # db.title = notAllowed
  # db.titleabbrev = notAllowed
  db.toc = notAllowed
  db.tocdiv = notAllowed
  db.tocentry = notAllowed
  db.token = notAllowed
  # db.trademark = notAllowed
  db.type = notAllowed
  # db.uri = notAllowed
  db.userinput = notAllowed
  db.varargs = notAllowed
  # db.variablelist = notAllowed
  # db.varlistentry = notAllowed
  # db.varname = notAllowed
  db.videodata = notAllowed
  db.videoobject = notAllowed
  db.void = notAllowed
  db.volumenum = notAllowed
  # db.warning = notAllowed
  db.wordasword = notAllowed
  # db.xref = notAllowed
  # db.year = notAllowed
  }


  #======== General Patterns
  db.nopara.blocks =
    db.list.blocks
     | db.formal.blocks
     | db.informal.blocks
     | db.publishing.blocks
     | db.graphic.blocks
     | db.technical.blocks
     | db.verbatim.blocks
     | db.remark
     | db.indexterm
     | db.synopsis.blocks
     | db.admonition.blocks
     # | db.bridgehead
     # | db.revhistory

  db.admonition.contentmodel = db._info.title.only,
    (db.para
     | db.simplelist
     | db.itemizedlist
     | db.variablelist
     | db.orderedlist
     | db.verbatim.blocks
     | db.remark
    )

  #======== Removed Attribute

  db.rdfalite.attributes = empty
  db.xlink.attributes = empty

  # Removed all db.common.linking.attributes from division elements
  db.acknowledgements.attlist =
    db.acknowledgements.role.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.acknowledgements.status.attribute?

  db.appendix.attlist =
    db.appendix.role.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.appendix.status.attribute?

  db.bibliography.attlist =
    db.bibliography.role.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.bibliography.status.attrib?

  db.bibliodiv.attlist =
    db.bibliodiv.role.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.bibliodiv.status.attrib?

  db.biblioentry.attlist =
    db.biblioentry.role.attribute?
    & db.common.attributes

  db.bibliomixed.attlist =
    db.bibliomixed.role.attribute?
    & db.common.attributes

  db.book.attlist =
    db.book.role.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.book.status.attribute?

  db.chapter.attlist =
    db.chapter.role.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.chapter.status.attribute?

  db.colophon.attlist =
    db.colophon.role.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.colophon.status.attribute?

  db.dedication.attlist =
    db.dedication.role.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.dedication.status.attribute?

  db.glossary.attlist =
    db.glossary.role.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.glossary.status.attribute?

  db.glossdiv.attlist =
    db.glossdiv.role.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.glossdiv.status.attribute?

  db.glossentry.attlist =
    db.glossentry.role.attribute?
    & db.common.attributes
    & db.glossentry.sortas.attribute?

  db.part.attlist =
    db.part.role.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.part.status.attribute?

  db.preface.attlist =
    db.preface.role.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.preface.status.attribute?

  db.reference.attlist =
    db.reference.role.attribute?
    & db.common.attributes
    & db.reference.status.attribute?
    & db.label.attribute?

  db.refentry.attlist =
    db.refentry.role.attribute?
    & db.common.attributes
    & db.refentry.status.attribute?
    & db.label.attribute?

  db.refsection.attlist =
    db.refsection.role.attribute?
    & db.common.attributes
    & db.refsection.status.attribute?
    & db.label.attribute?

  db.refsect1.attlist =
    db.refsect1.role.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.refsect1.status.attribute?

  db.refsect2.attlist =
    db.refsect2.role.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.refsect2.status.attribute?

  db.refnamediv.attlist =
    db.refnamediv.role.attribute?
    & db.common.attributes

  db.refsynopsisdiv.attlist =
    db.refsynopsisdiv.role.attribute?
    & db.common.attributes

  db.section.attlist =
    db.section.role.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.section.status.attribute?

  db.sect1.attlist =
    db.sect1.role.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.sect1.status.attribute?

  db.sect2.attlist =
    db.sect2.role.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.sect2.status.attribute?

  db.sect3.attlist =
    db.sect3.role.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.sect3.status.attribute?

  db.sect4.attlist =
    db.sect4.role.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.sect4.status.attribute?

  db.sect5.attlist =
    db.sect5.role.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.sect5.status.attribute?

  db.set.attlist =
    db.set.role.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.set.status.attribute?

  db.simplesect.attlist =
    db.simplesect.role.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.simplesect.status.attribute?

  db.topic.attlist =
    db.topic.role.attribute?
    & db.topic.type.attribute?
    & db.common.attributes
    & db.label.attribute?
    & db.topic.status.attribute?


  # Removed all db.common.linking.attributes from block elements

  db.address.attlist =
    db.address.role.attribute?
    & db.common.attributes
    & db.verbatim.attributes

  db.bibliolist.attlist =
    db.bibliolist.role.attribute?
    & db.common.attributes

  db.blockquote.attlist =
    db.blockquote.role.attribute?
    & db.common.attributes

  db.bridgehead.attlist =
    db.bridgehead.role.attribute?
    & db.common.attributes
    & db.bridgehead.renderas.attribute?

  db.calloutlist.attlist =
    db.calloutlist.role.attribute?
    & db.common.attributes

  db.caution.attlist =
    db.caution.role.attribute?
    & db.common.attributes

  db.classsynopsis.attlist =
    db.classsynopsis.role.attribute?
    & db.common.attributes
    & db.language.attribute?
    & db.classsynopsis.class.attribute?

  db.cmdsynopsis.attlist =
    db.cmdsynopsis.role.attribute?
    & db.common.attributes
    & db.cmdsynopsis.sepchar.attribute?
    & db.cmdsynopsis.cmdlength.attribute?
    & db.cmdsynopsis.label.attribute?

  db.constraintdef.attlist =
    db.constraintdef.role.attribute?
    & db.common.attributes

  db.classsynopsisinfo.attlist =
    db.classsynopsisinfo.role.attribute?
    & db.common.attributes
    & db.verbatim.attributes

  db.destructorsynopsis.attlist =
    db.destructorsynopsis.role.attribute?
    & db.common.attributes
    & db.language.attribute?

  db.epigraph.attlist =
    db.epigraph.role.attribute?
    & db.common.attributes

  db.equation.attlist =
    db.equation.role.attribute?
    & db.common.attributes
    & db.equation.label.attribute?
    & db.pgwide.attribute?
    & db.floatstyle.attribute?

  db.example.attlist =
    db.example.role.attribute?
    & db.common.attributes
    & db.example.label.attribute?
    & db.example.floatstyle.attribute?
    & (db.example.width.attribute | db.example.pgwide.attribute)?

  db.fieldsynopsis.attlist =
    db.fieldsynopsis.role.attribute?
    & db.common.attributes
    & db.language.attribute?

  db.figure.attlist =
    db.figure.role.attribute?
    & db.common.attributes
    & db.figure.label.attribute?
    & db.figure.pgwide.attribute?
    & db.figure.floatstyle.attribute?

  db.funcsynopsis.attlist =
    db.funcsynopsis.role.attribute?
    & db.common.attributes
    & db.language.attribute?

  db.glosslist.attlist =
    db.glosslist.role.attribute?
    & db.common.attributes

  db.important.attlist =
    db.important.role.attribute?
    & db.common.attributes

  db.informalexample.attlist =
    db.informalexample.role.attribute?
    & db.common.attributes
    & db.informalexample.floatstyle.attribute?
    & (db.informalexample.width.attribute | db.informalexample.pgwide.attribute)?

  db.informalfigure.attlist =
    db.informalfigure.role.attribute?
    & db.common.attributes
    & db.informalfigure.label.attribute?
    & db.informalfigure.pgwide.attribute?
    & db.informalfigure.floatstyle.attribute?

  db.cals.informaltable.attlist =
    db.cals.informaltable.role.attribute?
    & db.common.attributes
    & db.tabstyle.attribute?
    & db.floatstyle.attribute?
    & db.orient.attribute?
    & db.colsep.attribute?
    & db.rowsep.attribute?
    & db.frame.attribute?
    & db.pgwide.attribute?
    & db.rowheader.attribute?

  db.itemizedlist.attlist =
    db.itemizedlist.role.attribute?
    & db.common.attributes
    & db.spacing.attribute?
    & db.itemizedlist.mark.attribute?

  db.literallayout.attlist =
    db.literallayout.role.attribute?
    & db.common.attributes
    & db.common.linking.attributes
    & db.verbatim.attributes
    & db.literallayout.class.attribute?

  db.mediaobject.attlist =
    db.mediaobject.role.attribute?
    & db.common.attributes

  db.methodsynopsis.attlist =
    db.methodsynopsis.role.attribute?
    & db.common.attributes
    & db.language.attribute?

  db.msgset.attlist =
    db.msgset.role.attribute?
    & db.common.attributes

  db.note.attlist =
    db.note.role.attribute?
    & db.common.attributes

  db.orderedlist.attlist =
    db.orderedlist.role.attribute?
    & db.common.attributes
    & db.spacing.attribute?
    & (db.orderedlist.continuation.attribute
       | db.orderedlist.startingnumber.attribute)?
    & db.orderedlist.inheritnum.attribute?
    & db.orderedlist.numeration.attribute?

  db.procedure.attlist =
    db.procedure.role.attribute?
    & db.common.attributes

  db.productionset.attlist =
    db.productionset.role.attribute?
    & db.common.attributes

  db.programlisting.attlist =
    db.programlisting.role.attribute?
    & db.common.attributes
    & db.verbatim.attributes
    & db.programlisting.width.attribute?

  db.programlistingco.attlist =
    db.programlistingco.role.attribute?
    & db.common.attributes

  db.qandaset.attlist =
    db.qandaset.role.attribute?
    & db.common.attributes
    & db.qandaset.defaultlabel.attribute?

  db.revhistory.attlist =
    db.revhistory.role.attribute?
    & db.common.attributes

  db.screen.attlist =
    db.screen.role.attribute?
    & db.common.attributes
    & db.verbatim.attributes
    & db.screen.width.attribute?

  db.screenco.attlist =
    db.screenco.role.attribute?
    & db.common.attributes

  db.screenshot.attlist =
    db.screenshot.role.attribute?
    & db.common.attributes

  db.segmentedlist.attlist =
    db.segmentedlist.role.attribute?
    & db.common.attributes

  db.sidebar.attlist =
    db.sidebar.role.attribute?
    & db.sidebar.floatstyle.attribute?
    & db.common.attributes

  db.simplelist.attlist =
    db.simplelist.role.attribute?
    & db.common.attributes
    & db.simplelist.type.attribute?
    & db.simplelist.columns.attribute?

  db.synopsis.attlist =
    db.synopsis.role.attribute?
    & db.common.attributes
    & db.verbatim.attributes
    & db.synopsis.label.attribute?

  db.cals.table.attlist =
    db.cals.table.role.attribute?
    & db.cals.table.label.attribute?
    & db.common.attributes
    & db.tabstyle.attribute?
    & db.floatstyle.attribute?
    & db.orient.attribute?
    & db.colsep.attribute?
    & db.rowsep.attribute?
    & db.frame.attribute?
    & db.pgwide.attribute?
    &
      ## Indicates if the short or long title should be used in a List of Tables
      attribute shortentry {

        ## Indicates that the full title should be used.
        "0"
        |
          ## Indicates that the short short title (titleabbrev) should be used.
          "1"
      }?
    &
      ## Indicates if the table should appear in a List of Tables
      attribute tocentry {

        ## Indicates that the table should not occur in the List of Tables.
        "0"
        |
          ## Indicates that the table should appear in the List of Tables.
          "1"
      }?
    & db.rowheader.attribute?

  db.task.attlist =
    db.task.role.attribute?
    & db.common.attributes

  db.tip.attlist =
    db.tip.role.attribute?
    & db.common.attributes

  db.variablelist.attlist =
    db.variablelist.role.attribute?
    & db.common.attributes
    & db.spacing.attribute?
    & db.variablelist.termlength.attribute?

  db.warning.attlist =
    db.warning.role.attribute?
    & db.common.attributes

  #========= Changed attributes
  db.link.attlist &= db.xlink.simple.link.attributes

  db.version.attribute =
    ## Specifies the DocBook version of the element and its descendants
    attribute version { suse.schema.version | text }

  #======== Changed Content Model

  # Admonitions
  div {
    db.admonition.blocks =
      # Removed caution
      db.important | db.note | db.tip | db.warning
  }

  # entry
  #div {
  #  # Disallow admonitions in table <entry>s
  #  db.entry = element entry {
  #    db.entry.attlist,
  #    (db.all.inlines* | db.some.blocks*)
  #  }
  #}

  # We only want to support CALS tables
  div {
    db.informaltable.choice = notAllowed | db.cals.informaltable
    db.table.choice = notAllowed | db.cals.table

    db.html.table = notAllowed
    db.html.informaltable = notAllowed
  }

  # para
  div {
    # Disallow xml:id in paras
    db.para.attlist =
      db.para.role.attribute?
      & db.common.base.attributes
      & db.annotations.attribute?
      & db.common.linking.attributes

    # We don't want block elements inside paras, imitate simpara
    db.para =
    ## A paragraph (without block elements)
    [
      s:pattern [
        name = "Root must have version"
        "\x{a}" ~
        "          "
        s:rule [
          context = "/db:para"
          "\x{a}" ~
          "            "
          s:assert [
            test = "@version"
            "The root element must have a version attribute."
            ]
          "\x{a}" ~
          "          "
        ]
        "\x{a}" ~
        "        "
      ]
    ]
    element para {
      db.para.attlist,
      # db.para.info,
      (db.all.inlines)*
    }
  }

  # personname
  div {
    # Removed text
    db.personname =
    ## The personal name of an individual
    element personname {
      db.personname.attlist,
      (db.honorific
      | db.firstname
      | db.surname
      | db.lineage
      | db.othername)+
    }
  }

  # qandaentry
  div {
    # We need one question and one answer
    db.qandaentry =
      ## A question/answer set within a QandASet
      element qandaentry {
        db.qandaentry.attlist,
        db.qandaentry.info,
        db.question,
        db.answer
      }
  }

  # question
  div {
    # Removed label and question has to start with a para
    db.question =
      ## A question in a QandASet
      element question {
        db.question.attlist,
        db.para,
        db.all.blocks*
      }
  }

  # step
  div {
    # Replaced db.all.blocks -> db.step.blocks
    db.step =
    ## A unit of action in a procedure
    [
      s:pattern [
        name = "Root must have version"
        "\x{a}" ~
        "               "
        s:rule [
          context = "/db:step"
          "\x{a}" ~
          "                  "
          s:assert [
            test = "@version"
            "If this element is the root element, it must have a version attribute."
          ]
          "\x{a}" ~
          "               "
        ]
        "\x{a}" ~
        "            "
      ]
    ]
    element step {
      db.step.attlist,
      db.step.info,
      ((db.step.blocks+,
        ((db.substeps | db.stepalternatives), db.step.blocks*)?,
        db.result?)
       | ((db.substeps | db.stepalternatives),
          db.step.blocks*,
          db.result?))
    }
  }

  # lists: itemizedlist, orderedlist, variablelist
  div {
    # Removed several block elements as child of list elements
    # db.all.blocks -> db.para.blocks

    db.calloutlist =
      ## A list of callout
      element calloutlist {
        db.calloutlist.attlist,
        db.calloutlist.info,
        # db.para.blocks*,
        db.callout+
      }

    db.itemizedlist =
      ## A list in which each entry is marked with a bullet or other dingbat
      element itemizedlist {
        db.itemizedlist.attlist,
        db.itemizedlist.info,
        # db.para.blocks*,
        db.listitem+
      }

    db.orderedlist =
      ## A list in which each entry is marked with a sequentially incremented label
      element orderedlist {
        db.orderedlist.attlist,
        db.orderedlist.info,
        # db.para.blocks*,
        db.listitem+
      }

    db.variablelist =
      ## A list in which each entry is composed of a set of one or more terms and an associated description
      element variablelist {
        db.variablelist.attlist,
        db.variablelist.info,
        # db.para.blocks*,
        db.varlistentry+
      }
  }

  # XIncludes 1.1
  # see https://www.w3.org/TR/xinclude-11/
  #
  db.any.other.attribute = attribute *
                           - (locattr:* | trans:* | local:* | xlink:* | xml:* )
                           { text }
  db.xi.include.attlist =
    db.xi.href.attribute? &
    # (db.xi.href-empty.attribute | db.xi.href-uri.attribute)? &
    db.xi.parse.attribute? &
    db.xi.xpointer.attribute? &
    db.xi.fragid.attribute? &
    db.xi.encoding.attribute? &
    db.xi.accept.attribute? &
    db.xi.accept-language.attribute? &
    db.xi.set-xml-id.attribute? &
    db.any.other.attribute* &
    db.xi.trans.attlist?

} # end of include


# Redefine content modell here:


# --- EOF ---
